{
  "contractName": "HumanStandardToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "enableERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_userData",
          "type": "bytes"
        },
        {
          "name": "_operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenHolder",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mGranularity",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balances",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mSymbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_userData",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mErc20compatible",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "send",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_balances",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "userData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405273991a1bcb077599290d7305493c9a630c20f8b7986000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006557600080fd5b5060405162002e1638038062002e16833981018060405281019080805182019291906020018051906020019092919080518201929190602001805190602001909291905050508360019080519060200190620000c3929190620003c4565b508160029080519060200190620000dc929190620003c4565b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460146101000a81548160ff021916908315150217905550600183101515156200018b57600080fd5b82600381905550620001e26040805190810160405280600a81526020017f4552433230546f6b656e00000000000000000000000000000000000000000000815250306200023c640100000000026401000000009004565b620002326040805190810160405280600b81526020017f455243373737546f6b656e000000000000000000000000000000000000000000815250306200023c640100000000026401000000009004565b5050505062000473565b6000826040518082805190602001908083835b6020831015156200027657805182526020820191506020810190506020830392506200024f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329965a1d3083856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015620003a657600080fd5b505af1158015620003bb573d6000803e3d6000fd5b50505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200040757805160ff191683800117855562000438565b8280016001018555821562000438579182015b82811115620004375782518255916020019190600101906200041a565b5b5090506200044791906200044b565b5090565b6200047091905b808211156200046c57600081600090555060010162000452565b5090565b90565b61299380620004836000396000f30060806040526004361061013e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610143578063070c87f9146101d3578063095ea7b3146101ea57806318160ddd1461024f57806323b872dd1461027a578063313ce567146102ff578063556f0dc71461033057806362ad1b831461035b57806370a0823114610454578063757666d2146104ab5780637bb98a68146104d6578063803ab8d41461052d5780638da5cb5b146105bd5780639069195b14610614578063959b8c3f146106a457806395d89b41146106e75780639bd9bbc614610777578063a9059cbb1461080a578063d03d94b91461086f578063d0679d341461089e578063d95b6371146108eb578063dd62ed3e14610966578063f922f216146109dd578063fad8b32a146109f4575b600080fd5b34801561014f57600080fd5b50610158610a37565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019857808201518184015260208101905061017d565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101df57600080fd5b506101e8610ad9565b005b3480156101f657600080fd5b50610235600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b91565b604051808215151515815260200191505060405180910390f35b34801561025b57600080fd5b50610264610d52565b6040518082815260200191505060405180910390f35b34801561028657600080fd5b506102e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e1a565b604051808215151515815260200191505060405180910390f35b34801561030b57600080fd5b506103146111f4565b604051808260ff1660ff16815260200191505060405180910390f35b34801561033c57600080fd5b50610345611218565b6040518082815260200191505060405180910390f35b34801561036757600080fd5b50610452600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611222565b005b34801561046057600080fd5b50610495600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061124e565b6040518082815260200191505060405180910390f35b3480156104b757600080fd5b506104c061134f565b6040518082815260200191505060405180910390f35b3480156104e257600080fd5b506104eb611355565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053957600080fd5b5061054261137b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610582578082015181840152602081019050610567565b50505050905090810190601f1680156105af5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105c957600080fd5b506105d2611419565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561062057600080fd5b5061062961143f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561066957808201518184015260208101905061064e565b50505050905090810190601f1680156106965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106b057600080fd5b506106e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114dd565b005b3480156106f357600080fd5b506106fc61160a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561073c578082015181840152602081019050610721565b50505050905090810190601f1680156107695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561078357600080fd5b50610808600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506116ac565b005b34801561081657600080fd5b50610855600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116d1565b604051808215151515815260200191505060405180910390f35b34801561087b57600080fd5b50610884611728565b604051808215151515815260200191505060405180910390f35b3480156108aa57600080fd5b506108e9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061173b565b005b3480156108f757600080fd5b5061094c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061176f565b604051808215151515815260200191505060405180910390f35b34801561097257600080fd5b506109c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611839565b6040518082815260200191505060405180910390f35b3480156109e957600080fd5b506109f261198a565b005b348015610a0057600080fd5b50610a35600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a43565b005b606060018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610acf5780601f10610aa457610100808354040283529160200191610acf565b820191906000526020600020905b815481529060010190602001808311610ab257829003601f168201915b5050505050905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b3557600080fd5b6001600460146101000a81548160ff021916908315150217905550610b8f6040805190810160405280600a81526020017f4552433230546f6b656e0000000000000000000000000000000000000000000081525030611b70565b565b6000600460149054906101000a900460ff161515610bae57600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391ef14b43385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610ca757600080fd5b505af1158015610cbb573d6000803e3d6000fd5b505050506040513d6020811015610cd157600080fd5b8101908080519060200190929190505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4e41b226040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610dda57600080fd5b505af1158015610dee573d6000803e3d6000fd5b505050506040513d6020811015610e0457600080fd5b8101908080519060200190929190505050905090565b6000600460149054906101000a900460ff161515610e3757600080fd5b81600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610ef557600080fd5b505af1158015610f09573d6000803e3d6000fd5b505050506040513d6020811015610f1f57600080fd5b810190808051906020019092919050505010158015611069575081600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630af4187d33866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561102b57600080fd5b505af115801561103f573d6000803e3d6000fd5b505050506040513d602081101561105557600080fd5b810190808051906020019092919050505010155b80156110755750600082115b156111e857600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fcfdf7c53385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561117357600080fd5b505af1158015611187573d6000803e3d6000fd5b505050506040513d602081101561119d57600080fd5b8101908080519060200190929190505050506111df84848460206040519081016040528060008152503360206040519081016040528060008152506000611cf4565b600190506111ed565b600090505b9392505050565b6000600460149054906101000a900460ff16151561121157600080fd5b6012905090565b6000600354905090565b61122c338661176f565b151561123757600080fd5b6112478585858533866001611cf4565b5050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561130d57600080fd5b505af1158015611321573d6000803e3d6000fd5b505050506040513d602081101561133757600080fd5b81019080805190602001909291905050509050919050565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114115780601f106113e657610100808354040283529160200191611411565b820191906000526020600020905b8154815290600101906020018083116113f457829003601f168201915b505050505081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114d55780601f106114aa576101008083540402835291602001916114d5565b820191906000526020600020905b8154815290600101906020018083116114b857829003601f168201915b505050505081565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561151857600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f960405160405180910390a350565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116a25780601f10611677576101008083540402835291602001916116a2565b820191906000526020600020905b81548152906001019060200180831161168557829003601f168201915b5050505050905090565b6116cc338484843360206040519081016040528060008152506001611cf4565b505050565b6000600460149054906101000a900460ff1615156116ee57600080fd5b61171e33848460206040519081016040528060008152503360206040519081016040528060008152506000611cf4565b6001905092915050565b600460149054906101000a900460ff1681565b61176b33838360206040519081016040528060008152503360206040519081016040528060008152506001611cf4565b5050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806118315750600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b905092915050565b6000600460149054906101000a900460ff16151561185657600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630af4187d84846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561194757600080fd5b505af115801561195b573d6000803e3d6000fd5b505050506040513d602081101561197157600080fd5b8101908080519060200190929190505050905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119e657600080fd5b6000600460146101000a81548160ff021916908315150217905550611a416040805190810160405280600a81526020017f4552433230546f6b656e000000000000000000000000000000000000000000008152506000611b70565b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611a7e57600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a350565b6000826040518082805190602001908083835b602083101515611ba85780518252602082019150602081019050602083039250611b83565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329965a1d3083856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015611cd757600080fd5b505af1158015611ceb573d6000803e3d6000fd5b50505050505050565b611cfd85612238565b611d0b838888888887612271565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515611d4757600080fd5b84600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611e0557600080fd5b505af1158015611e19573d6000803e3d6000fd5b505050506040513d6020811015611e2f57600080fd5b810190808051906020019092919050505010151515611e4d57600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aba0085988876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611f1257600080fd5b505af1158015611f26573d6000803e3d6000fd5b505050506040513d6020811015611f3c57600080fd5b810190808051906020019092919050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166366e7ea0f87876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561201357600080fd5b505af1158015612027573d6000803e3d6000fd5b505050506040513d602081101561203d57600080fd5b81019080805190602001909291905050505061205e838888888887876124db565b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987888887604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156121115780820151818401526020810190506120f6565b50505050905090810190601f16801561213e5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561217757808201518184015260208101905061215c565b50505050905090810190601f1680156121a45780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a4600460149054906101000a900460ff161561222f578573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a35b50505050505050565b806122626003546122546003548561276590919063ffffffff16565b61278090919063ffffffff16565b14151561226e57600080fd5b50565b60006122b2866040805190810160405280601281526020017f455243373737546f6b656e7353656e64657200000000000000000000000000008152506127b3565b905060008173ffffffffffffffffffffffffffffffffffffffff161415156124d2578073ffffffffffffffffffffffffffffffffffffffff166375ab97828888888888886040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156124015780820151818401526020810190506123e6565b50505050905090810190601f16801561242e5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561246757808201518184015260208101905061244c565b50505050905090810190601f1680156124945780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b1580156124b957600080fd5b505af11580156124cd573d6000803e3d6000fd5b505050505b50505050505050565b600061251c866040805190810160405280601581526020017f455243373737546f6b656e73526563697069656e7400000000000000000000008152506127b3565b905060008173ffffffffffffffffffffffffffffffffffffffff1614151561273f578073ffffffffffffffffffffffffffffffffffffffff166223de298989898989896040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561266a57808201518184015260208101905061264f565b50505050905090810190601f1680156126975780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156126d05780820151818401526020810190506126b5565b50505050905090810190601f1680156126fd5780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b15801561272257600080fd5b505af1158015612736573d6000803e3d6000fd5b5050505061275b565b811561275a5761274e8661292b565b151561275957600080fd5b5b5b5050505050505050565b600080828481151561277357fe5b0490508091505092915050565b600080828402905060008414806127a1575082848281151561279e57fe5b04145b15156127a957fe5b8091505092915050565b600080826040518082805190602001908083835b6020831015156127ec57805182526020820191506020810190506020830392506127c7565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aabbb8ca85836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200192505050602060405180830381600087803b1580156128e757600080fd5b505af11580156128fb573d6000803e3d6000fd5b505050506040513d602081101561291157600080fd5b810190808051906020019092919050505091505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1614156129565760009150612961565b823b90506000811491505b509190505600a165627a7a723058206e41985710aaa2a65ff5a8252c5d5912b996ce9bdcb9a1e49424458965413fbd0029",
  "deployedBytecode": "",
  "sourceMap": "83:833:6:-;;;465:42:5;418:90;;;;;;;;;;;;;;;;;;;;429:485:6;8:9:-1;5:2;;;30:1;27;20:12;5:2;429:485:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;587:5;579;:13;;;;;;;;;;;;:::i;:::-;;612:7;602;:17;;;;;;;;;;;;:::i;:::-;;637:10;629:5;;:18;;;;;;;;;;;;;;;;;;677:9;657:8;;:30;;;;;;;;;;;;;;;;;;716:4;697:16;;:23;;;;;;;;;;;;;;;;;;754:1;738:12;:17;;730:26;;;;;;;;781:12;766;:27;;;;804:46;;;;;;;;;;;;;;;;;;;845:4;804:26;;;:46;;;:::i;:::-;860:47;;;;;;;;;;;;;;;;;;;902:4;860:26;;;:47;;;:::i;:::-;429:485;;;;83:833;;515:208:5;603:18;634:10;624:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;624:21:5;;;;;;;;;;;;;;;;603:42;;655:14;;;;;;;;;;;:38;;;694:4;700:9;711:4;655:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;655:61:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;655:61:5;;;;515:208;;;:::o;83:833:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "83:833:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1448:66:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1448:66:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1448:66:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5506:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5506:136:8;;;;;;7382:225;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7382:225:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1814:94:8;;;;;;;;;;;;;;;;;;;;;;;6572:448;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6572:448:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5758:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5758:79:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1681:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1681:81:8;;;;;;;;;;;;;;;;;;;;;;;4561:251;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4561:251:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2091:120:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;945:27:8;;;;;;;;;;;;;;;;;;;;;;;1090:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1090:24:8;;;;;;;;;;;;;;;;;;;;;;;;;;;918:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;918:21:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;918:21:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;978:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;978:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;893:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;893:19:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;893:19:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3022:204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3022:204:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1560:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1560:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2708:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2708:150:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6077:181;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6077:181:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1004:28:8;;;;;;;;;;;;;;;;;;;;;;;;;;;2378:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2378:126:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3943:184;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3943:184:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7976:166;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7976:166:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5259:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5259:137:8;;;;;;3393:199;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3393:199:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;1448:66;1489:6;1506:5;1499:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1448:66;:::o;5506:136::-;1319:5;;;;;;;;;;;1305:19;;:10;:19;;;1296:29;;;;;;;;5575:4;5556:16;;:23;;;;;;;;;;;;;;;;;;5589:46;;;;;;;;;;;;;;;;;;;5630:4;5589:26;:46::i;:::-;5506:136::o;7382:225::-;7456:12;5116:16;;;;;;;;;;;5108:25;;;;;;;;7480:8;;;;;;;;;;;:19;;;7500:10;7512:8;7522:7;7480:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7480:50:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7480:50:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7480:50:8;;;;;;;;;;;;;;;;;7561:8;7540:39;;7549:10;7540:39;;;7571:7;7540:39;;;;;;;;;;;;;;;;;;7596:4;7589:11;;7382:225;;;;:::o;1814:94::-;1862:7;1880:8;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1880:25:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1880:25:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1880:25:8;;;;;;;;;;;;;;;;1873:32;;1814:94;:::o;6572:448::-;6661:12;5116:16;;;;;;;;;;;5108:25;;;;;;;;6724:7;6689:8;;;;;;;;;;;:19;;;6709:10;6689:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6689:31:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6689:31:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6689:31:8;;;;;;;;;;;;;;;;:42;;:95;;;;;6777:7;6735:8;;;;;;;;;;;:21;;;6757:10;6769:3;6735:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6735:38:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6735:38:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6735:38:8;;;;;;;;;;;;;;;;:49;;6689:95;:110;;;;;6798:1;6788:7;:11;6689:110;6685:320;;;6815:8;;;;;;;;;;;:19;;;6835:10;6847:3;6852:7;6815:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6815:45:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6815:45:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6815:45:8;;;;;;;;;;;;;;;;;6874:54;6881:5;6888:3;6893:7;6874:54;;;;;;;;;;;;;6906:10;6874:54;;;;;;;;;;;;;6922:5;6874:6;:54::i;:::-;6949:4;6942:11;;;;6685:320;6989:5;6982:12;;5143:1;6572:448;;;;;:::o;5758:79::-;5809:5;5116:16;;;;;;;;;;;5108:25;;;;;;;;5831:2;5818:16;;5758:79;:::o;1681:81::-;1729:7;1747:12;;1740:19;;1681:81;:::o;4561:251::-;4691:32;4705:10;4717:5;4691:13;:32::i;:::-;4683:41;;;;;;;;4734:71;4741:5;4748:3;4753:7;4762:9;4773:10;4785:13;4800:4;4734:6;:71::i;:::-;4561:251;;;;;:::o;2091:120::-;2157:7;2175:8;;;;;;;;;;;:19;;;2195:12;2175:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2175:33:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2175:33:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2175:33:8;;;;;;;;;;;;;;;;2168:40;;2091:120;;;:::o;945:27::-;;;;:::o;1090:24::-;;;;;;;;;;;;;:::o;918:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;978:20::-;;;;;;;;;;;;;:::o;893:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3022:204::-;3106:10;3093:23;;:9;:23;;;;3085:32;;;;;;;;3164:4;3127:11;:22;3139:9;3127:22;;;;;;;;;;;;;;;:34;3150:10;3127:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;3208:10;3178:41;;3197:9;3178:41;;;;;;;;;;;;3022:204;:::o;1560:70::-;1603:6;1620:7;1613:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:70;:::o;2708:150::-;2786:65;2793:10;2805:3;2810:7;2819:9;2830:10;2786:65;;;;;;;;;;;;;2846:4;2786:6;:65::i;:::-;2708:150;;;:::o;6077:181::-;6147:12;5116:16;;;;;;;;;;;5108:25;;;;;;;;6171:59;6178:10;6190:3;6195:7;6171:59;;;;;;;;;;;;;6208:10;6171:59;;;;;;;;;;;;;6224:5;6171:6;:59::i;:::-;6247:4;6240:11;;6077:181;;;;:::o;1004:28::-;;;;;;;;;;;;;:::o;2378:126::-;2439:58;2446:10;2458:3;2463:7;2439:58;;;;;;;;;;;;;2476:10;2439:58;;;;;;;;;;;;;2492:4;2439:6;:58::i;:::-;2378:126;;:::o;3943:184::-;4032:4;4068:12;4055:25;;:9;:25;;;:65;;;;4084:11;:22;4096:9;4084:22;;;;;;;;;;;;;;;:36;4107:12;4084:36;;;;;;;;;;;;;;;;;;;;;;;;;4055:65;4048:72;;3943:184;;;;:::o;7976:166::-;8060:17;5116:16;;;;;;;;;;;5108:25;;;;;;;;8096:8;;;;;;;;;;;:21;;;8118:6;8126:8;8096:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8096:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8096:39:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8096:39:8;;;;;;;;;;;;;;;;8089:46;;7976:166;;;;:::o;5259:137::-;1319:5;;;;;;;;;;;1305:19;;:10;:19;;;1296:29;;;;;;;;5329:5;5310:16;;:24;;;;;;;;;;;;;;;;;;5344:45;;;;;;;;;;;;;;;;;;;5385:3;5344:26;:45::i;:::-;5259:137::o;3393:199::-;3474:10;3461:23;;:9;:23;;;;3453:32;;;;;;;;3532:5;3495:11;:22;3507:9;3495:22;;;;;;;;;;;;;;;:34;3518:10;3495:34;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;3574:10;3547:38;;3563:9;3547:38;;;;;;;;;;;;3393:199;:::o;515:208:5:-;603:18;634:10;624:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;624:21:5;;;;;;;;;;;;;;;;603:42;;655:14;;;;;;;;;;;:38;;;694:4;700:9;711:4;655:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;655:61:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;655:61:5;;;;515:208;;;:::o;9693:828:8:-;9925:24;9941:7;9925:15;:24::i;:::-;9960:68;9971:9;9982:5;9989:3;9994:7;10003:9;10014:13;9960:10;:68::i;:::-;10062:1;10047:17;;:3;:17;;;;10039:26;;;;;;;;10158:7;10128:8;;;;;;;;;;;:19;;;10148:5;10128:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10128:26:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10128:26:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10128:26:8;;;;;;;;;;;;;;;;:37;;10120:46;;;;;;;;10200:8;;;;;;;;;;;:19;;;10220:5;10227:7;10200:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10200:35:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10200:35:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10200:35:8;;;;;;;;;;;;;;;;;10245:8;;;;;;;;;;;:19;;;10265:3;10270:7;10245:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10245:33:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10245:33:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10245:33:8;;;;;;;;;;;;;;;;;10288:88;10302:9;10313:5;10320:3;10325:7;10334:9;10345:13;10360:15;10288:13;:88::i;:::-;10410:3;10387:62;;10403:5;10387:62;;10392:9;10387:62;;;10415:7;10424:9;10435:13;10387:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10387:62:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10387:62:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10463:16;;;;;;;;;;;10459:56;;;10499:3;10483:29;;10492:5;10483:29;;;10504:7;10483:29;;;;;;;;;;;;;;;;;;10459:56;9693:828;;;;;;;:::o;8338:136::-;8459:7;8412:43;8442:12;;8412:25;8424:12;;8412:7;:11;;:25;;;;:::i;:::-;:29;;:43;;;;:::i;:::-;:54;8404:63;;;;;;;;8338:136;:::o;12645:467::-;12839:28;12870:42;12884:5;12870:42;;;;;;;;;;;;;;;;;;:13;:42::i;:::-;12839:73;;12950:1;12926:20;:25;;;;12922:184;;;12986:20;12967:53;;;13038:9;13049:5;13056:3;13061:7;13070:9;13081:13;12967:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12967:128:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12967:128:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12967:128:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12967:128:8;;;;12922:184;12645:467;;;;;;;:::o;11345:597::-;11572:31;11606:43;11620:3;11606:43;;;;;;;;;;;;;;;;;;:13;:43::i;:::-;11572:77;;11690:1;11663:23;:28;;;;11659:277;;;11729:23;11707:61;;;11786:9;11797:5;11804:3;11809:7;11818:9;11829:13;11707:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11707:136:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11707:136:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11707:136:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11707:136:8;;;;11659:277;;;11864:15;11860:76;;;11903:21;11920:3;11903:16;:21::i;:::-;11895:30;;;;;;;;11860:76;11659:277;11345:597;;;;;;;;:::o;302:283:7:-;360:7;457:9;473:1;469;:5;;;;;;;;457:17;;577:1;570:8;;302:283;;;;;:::o;139:157::-;197:7;216:9;232:1;228;:5;216:17;;255:1;250;:6;:20;;;;269:1;264;260;:5;;;;;;;;:10;250:20;243:28;;;;;;288:1;281:8;;139:157;;;;;:::o;729:222:5:-;811:7;830:18;861:10;851:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;851:21:5;;;;;;;;;;;;;;;;830:42;;889:14;;;;;;;;;;;:38;;;928:4;934:9;889:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;889:55:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;889:55:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;889:55:5;;;;;;;;;;;;;;;;882:62;;729:222;;;;;:::o;8690:258:8:-;8757:4;8815:9;8786:1;8777:5;:10;;;8773:33;;;8798:5;8791:12;;;;8773:33;8865:5;8853:18;8845:26;;8940:1;8932:4;:9;8925:16;;8690:258;;;;;:::o",
  "source": "pragma solidity ^0.4.19;\n\n\nimport \"./StandardToken.sol\";\nimport \"./Balances.sol\";\n\ncontract HumanStandardToken is StandardToken {\n\t\n\t /* -- Constructor -- */\n    //\n    /// @notice Constructor to create a ReferenceToken\n    /// @param _name Name of the new token\n    /// @param _symbol Symbol of the new token.\n    /// @param _granularity Minimum transferable chunk.\n    /// @param _balances address of the Balances contract\n    constructor(\n        string _name,\n        uint256 _granularity,\n        string _symbol,\n        address _balances\n    )\n        public\n    {\n        mName = _name;\n        mSymbol = _symbol;\n        owner = msg.sender;\n        balances = Balances(_balances);\n        mErc20compatible = true;\n        require(_granularity >= 1);\n        mGranularity = _granularity;\n\n        setInterfaceImplementation(\"ERC20Token\", this);\n        setInterfaceImplementation(\"ERC777Token\", this);\n    }\n}\n\n",
  "sourcePath": "/home/hamza/code/BCD/smartContracts/ERC777/contracts/HumanStandardToken.sol",
  "ast": {
    "absolutePath": "/home/hamza/code/BCD/smartContracts/ERC777/contracts/HumanStandardToken.sol",
    "exportedSymbols": {
      "HumanStandardToken": [
        669
      ]
    },
    "id": 670,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 609,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/home/hamza/code/BCD/smartContracts/ERC777/contracts/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 610,
        "nodeType": "ImportDirective",
        "scope": 670,
        "sourceUnit": 1418,
        "src": "27:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/hamza/code/BCD/smartContracts/ERC777/contracts/Balances.sol",
        "file": "./Balances.sol",
        "id": 611,
        "nodeType": "ImportDirective",
        "scope": 670,
        "sourceUnit": 286,
        "src": "57:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 612,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1417,
              "src": "114:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1417",
                "typeString": "contract StandardToken"
              }
            },
            "id": 613,
            "nodeType": "InheritanceSpecifier",
            "src": "114:13:6"
          }
        ],
        "contractDependencies": [
          369,
          473,
          607,
          1417
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 669,
        "linearizedBaseContracts": [
          669,
          1417,
          607,
          473,
          369
        ],
        "name": "HumanStandardToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "569:345:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 624,
                      "name": "mName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "579:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 625,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "587:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "579:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "579:13:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 628,
                      "name": "mSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 786,
                      "src": "602:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 629,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "612:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "602:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "602:17:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 632,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "629:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 633,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "637:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "637:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "629:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "629:18:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 637,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "657:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Balances_$285",
                        "typeString": "contract Balances"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 639,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "677:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 638,
                        "name": "Balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "668:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Balances_$285_$",
                          "typeString": "type(contract Balances)"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "668:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Balances_$285",
                        "typeString": "contract Balances"
                      }
                    },
                    "src": "657:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Balances_$285",
                      "typeString": "contract Balances"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "657:30:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 643,
                      "name": "mErc20compatible",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "697:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "716:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "697:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "697:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 648,
                          "name": "_granularity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "738:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "754:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "738:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1435,
                        1436
                      ],
                      "referencedDeclaration": 1435,
                      "src": "730:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "730:26:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 653,
                      "name": "mGranularity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "766:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 654,
                      "name": "_granularity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "781:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "766:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "766:27:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433230546f6b656e",
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "831:12:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                          "typeString": "literal_string \"ERC20Token\""
                        },
                        "value": "ERC20Token"
                      },
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "845:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HumanStandardToken_$669",
                          "typeString": "contract HumanStandardToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                          "typeString": "literal_string \"ERC20Token\""
                        },
                        {
                          "typeIdentifier": "t_contract$_HumanStandardToken_$669",
                          "typeString": "contract HumanStandardToken"
                        }
                      ],
                      "id": 657,
                      "name": "setInterfaceImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "804:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "804:46:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455243373737546f6b656e",
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "887:13:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                          "typeString": "literal_string \"ERC777Token\""
                        },
                        "value": "ERC777Token"
                      },
                      {
                        "argumentTypes": null,
                        "id": 664,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "902:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HumanStandardToken_$669",
                          "typeString": "contract HumanStandardToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                          "typeString": "literal_string \"ERC777Token\""
                        },
                        {
                          "typeIdentifier": "t_contract$_HumanStandardToken_$669",
                          "typeString": "contract HumanStandardToken"
                        }
                      ],
                      "id": 662,
                      "name": "setInterfaceImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "860:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "860:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "860:47:6"
                }
              ]
            },
            "documentation": "@notice Constructor to create a ReferenceToken\n @param _name Name of the new token\n @param _symbol Symbol of the new token.\n @param _granularity Minimum transferable chunk.\n @param _balances address of the Balances contract",
            "id": 668,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 615,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "450:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 617,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "472:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 619,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "502:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "name": "_balances",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "526:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "440:109:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:0:6"
            },
            "scope": 669,
            "src": "429:485:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 670,
        "src": "83:833:6"
      }
    ],
    "src": "0:918:6"
  },
  "legacyAST": {
    "absolutePath": "/home/hamza/code/BCD/smartContracts/ERC777/contracts/HumanStandardToken.sol",
    "exportedSymbols": {
      "HumanStandardToken": [
        669
      ]
    },
    "id": 670,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 609,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/home/hamza/code/BCD/smartContracts/ERC777/contracts/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 610,
        "nodeType": "ImportDirective",
        "scope": 670,
        "sourceUnit": 1418,
        "src": "27:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/hamza/code/BCD/smartContracts/ERC777/contracts/Balances.sol",
        "file": "./Balances.sol",
        "id": 611,
        "nodeType": "ImportDirective",
        "scope": 670,
        "sourceUnit": 286,
        "src": "57:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 612,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1417,
              "src": "114:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1417",
                "typeString": "contract StandardToken"
              }
            },
            "id": 613,
            "nodeType": "InheritanceSpecifier",
            "src": "114:13:6"
          }
        ],
        "contractDependencies": [
          369,
          473,
          607,
          1417
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 669,
        "linearizedBaseContracts": [
          669,
          1417,
          607,
          473,
          369
        ],
        "name": "HumanStandardToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "569:345:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 624,
                      "name": "mName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "579:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 625,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "587:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "579:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "579:13:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 628,
                      "name": "mSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 786,
                      "src": "602:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 629,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "612:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "602:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "602:17:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 632,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "629:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 633,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "637:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "637:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "629:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "629:18:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 637,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "657:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Balances_$285",
                        "typeString": "contract Balances"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 639,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "677:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 638,
                        "name": "Balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "668:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Balances_$285_$",
                          "typeString": "type(contract Balances)"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "668:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Balances_$285",
                        "typeString": "contract Balances"
                      }
                    },
                    "src": "657:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Balances_$285",
                      "typeString": "contract Balances"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "657:30:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 643,
                      "name": "mErc20compatible",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "697:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "716:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "697:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "697:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 648,
                          "name": "_granularity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "738:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "754:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "738:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1435,
                        1436
                      ],
                      "referencedDeclaration": 1435,
                      "src": "730:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "730:26:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 653,
                      "name": "mGranularity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "766:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 654,
                      "name": "_granularity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "781:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "766:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "766:27:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433230546f6b656e",
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "831:12:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                          "typeString": "literal_string \"ERC20Token\""
                        },
                        "value": "ERC20Token"
                      },
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "845:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HumanStandardToken_$669",
                          "typeString": "contract HumanStandardToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                          "typeString": "literal_string \"ERC20Token\""
                        },
                        {
                          "typeIdentifier": "t_contract$_HumanStandardToken_$669",
                          "typeString": "contract HumanStandardToken"
                        }
                      ],
                      "id": 657,
                      "name": "setInterfaceImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "804:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "804:46:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455243373737546f6b656e",
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "887:13:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                          "typeString": "literal_string \"ERC777Token\""
                        },
                        "value": "ERC777Token"
                      },
                      {
                        "argumentTypes": null,
                        "id": 664,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "902:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HumanStandardToken_$669",
                          "typeString": "contract HumanStandardToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                          "typeString": "literal_string \"ERC777Token\""
                        },
                        {
                          "typeIdentifier": "t_contract$_HumanStandardToken_$669",
                          "typeString": "contract HumanStandardToken"
                        }
                      ],
                      "id": 662,
                      "name": "setInterfaceImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "860:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "860:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "860:47:6"
                }
              ]
            },
            "documentation": "@notice Constructor to create a ReferenceToken\n @param _name Name of the new token\n @param _symbol Symbol of the new token.\n @param _granularity Minimum transferable chunk.\n @param _balances address of the Balances contract",
            "id": 668,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 615,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "450:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 617,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "472:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 619,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "502:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "name": "_balances",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "526:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "440:109:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:0:6"
            },
            "scope": 669,
            "src": "429:485:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 670,
        "src": "83:833:6"
      }
    ],
    "src": "0:918:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-07-21T05:21:42.212Z"
}